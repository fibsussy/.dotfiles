[include]
    path = ./identity
    path = ./alias

[init]
    defaultBranch = main

[core]
    editor = nvim
    filemode = false
    autocrlf = input
    sparseCheckout = true

[safe]
    directory = *

[push]
    autoSetupRemote = true
    default = current

[pull]
    rebase = false

[branch]
    autoSetupMerge = always

[rerere]
    enabled = true

[status]
    showUntrackedFiles = all


[alias]

  edit-remote = "!sh -c ' \
    current=$(git remote get-url origin); \
    read -e -p \"Edit remote URL: \" -i \"$current\" new_url; \
    git remote set-url origin \"$new_url\"; \
    echo \"Remote URL updated to: $(git remote get-url origin)\" \
    '"

  set-ssh-extension = "!sh -c ' \
    echo \"Choose an option for the remote extension:\"; \
    echo \"  1) csj\"; \
    echo \"  2) personal\"; \
    echo \"  3) none\"; \
    read -p \"Enter the number [1-3]: \" choice; \
    case \"$choice\" in \
      1) ext=csj ;; \
      2) ext=personal ;; \
      3) ext=none ;; \
      *) echo \"Invalid option. Please enter 1, 2, or 3.\"; exit 1 ;; \
    esac; \
    current=$(git remote get-url origin); \
    case \"$ext\" in \
      csj) new_url=$(echo \"$current\" | sed \"s|git@github.com[^:]*:|git@github.com-csj:|\");; \
      personal) new_url=$(echo \"$current\" | sed \"s|git@github.com[^:]*:|git@github.com:|\");; \
    esac; \
    git remote set-url origin \"$new_url\"; \
    echo \"Remote URL updated to: $(git remote get-url origin)\"; \
    '"


  to-ssh = "!sh -c ' \
    git remote set-url origin $(git remote get-url origin | \
    sed \"s|https://github.com/|git@github.com:|\"); \
    git remote get-url origin \
    '"

  to-https = "!sh -c ' \
    git remote set-url origin $(git remote get-url origin | \
    sed \"s|git@github.com:|https://github.com/|\"); \
    git remote get-url origin \
    '"

  set-upstream = !git push -u origin $(git symbolic-ref --short HEAD) || git branch --set-upstream-to=origin/$(git symbolic-ref --short HEAD)

  nuke = "!f() { \
    confirmed=false; \
    for arg in \"$@\"; do \
      if [[ \"$arg\" == '--noconfirm' ]]; then \
        confirmed=true; \
        break; \
      fi; \
    done; \
    if [[ \"$confirmed\" == 'false' ]]; then \
      read -p 'Are you sure you want to NUKE all of your local changes? [y/N] ' yn; \
      if [[ \"$yn\" =~ ^[Yy]$ ]]; then \
        confirmed=true; \
      fi; \
    fi; \
    if [[ \"$confirmed\" == 'true' ]]; then \
      git fetch origin && \
      git reset --hard origin/$(git branch --show-current); \
    fi \
    }; f"
