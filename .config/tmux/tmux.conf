set -g allow-passthrough all
set -ga update-environment KITTY
set -ga update-environment KITTY_PROGRAM
set-option -g window-size smallest
set-window-option -g aggressive-resize on
set-option -g focus-events on

set-option -g history-limit 10000
set -s escape-time 0

setw -g mouse on
setw -g mode-keys vi

set -g status-position bottom
set -g status-interval 1
set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})'
set -g window-status-current-format '[#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})]'
set -g status-right-length 120
set -g status-right '#(date +"%b %_d %H:%M") | #(whoami)@#(hostname -s) '

set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'niksingh710/minimal-tmux-status'

set -g status off
set -g status-bg default
set -g status-style bg=default

set -g @plugin 'tmux-plugins/tpm'
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run -b '~/.tmux/plugins/tpm/tpm'

unbind C-b
# Unbind default prefix but keep it as a fallback for complex operations
set -g prefix M-b

# ensure its captured by outer
unbind M-a

# Custom popup for tmux-leap (keeping your existing binding)
bind-key -n M-f popup -E -d '#{pane_current_path}' 'tmux-leap' 

# Direct Alt key bindings for all tmux operations
# Window management
bind-key -n M-c new-window -c "#{pane_current_path}"                # Create a new window
bind-key -n M-& kill-window                                         # Kill current window
bind-key -n M-, command-prompt -I "#W" "rename-window '%%'"         # Rename current window
bind-key -n M-. command-prompt "move-window -t '%%'"                # Move the current window
bind-key -n M-p previous-window                                     # Select the previous window
bind-key -n M-l last-window                                         # Select the previously current window
bind-key -n M-w choose-tree -w                                      # Choose a window from a list
bind-key -n M-i display-message                                     # Display window information
bind-key -n "M-'" command-prompt -p index "select-window -t ':%%'"    # Prompt for window index to select

# Window selection (0-9)
bind-key -n M-1 select-window -t :1
bind-key -n M-2 if-shell '[ -z "$(tmux list-windows | grep ^2:)" ]' 'new-window -t :2' 'select-window -t :2'
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9

# Pane management
bind-key -n 'M-"' split-window -v -c "#{pane_current_path}"           # Split window vertically
bind-key -n M-% split-window -h -c "#{pane_current_path}"           # Split window horizontally
bind-key -n M-! break-pane                                          # Break pane to a new window
bind-key -n M-x kill-pane                                           # Kill the active pane
bind-key -n M-X kill-session
bind-key -n M-z resize-pane -Z                                      # Zoom the active pane
bind-key -n M-o select-pane -t :.+                                  # Select the next pane
bind-key -n M-\; last-pane                                          # Move to the previously active pane
bind-key -n M-q display-panes                                       # Display pane numbers
bind-key -n M-F command-prompt "find-window '%%'"                   # Search for a pane
bind-key -n M-{ swap-pane -U                                        # Swap the active pane with the pane above
bind-key -n "M-}" swap-pane -D                                        # Swap the active pane with the pane below
bind-key -n M-Space next-layout                                     # Select next layout
bind-key -n M-E select-layout -E                                    # Spread panes out evenly
bind-key -n M-m select-pane -m                                      # Toggle the marked pane
bind-key -n M-M select-pane -M                                      # Clear the marked pane

# Session management
bind-key -n M-s choose-tree -s                                      # Choose a session from a list
bind-key -n M-$ command-prompt -I "#S" "rename-session '%%'"        # Rename current session
bind-key -n M-d detach-client                                       # Detach the current client
bind-key -n M-D choose-client                                       # Choose and detach a client from a list
bind-key -n M-L switch-client -l                                    # Switch to the last client
bind-key -n M-( switch-client -p                                    # Switch to previous client
bind-key -n M-) switch-client -n                                    # Switch to next client
bind-key -n M-n run-shell "~/Scripts/tmux_new_session.sh '#{pane_current_path}'" # Custom new session script

# Copy mode and buffers
bind-key -n M-[ copy-mode                                           # Enter copy mode
bind-key -n M-] paste-buffer                                        # Paste the most recent paste buffer
bind-key -n M-= choose-buffer                                       # Choose a paste buffer from a list
bind-key -n M-# list-buffers                                        # List all paste buffers
bind-key -n M-- delete-buffer                                       # Delete the most recent paste buffer
bind-key -n M-PPage copy-mode -u                                    # Enter copy mode and scroll up

# Miscellaneous
bind-key -n M-r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded." # Reload config
bind-key -n M-: command-prompt                                      # Prompt for a command
bind-key -n M-? list-keys                                           # List key bindings
bind-key -n M-/ command-prompt -k "list-keys -1N '%%'"              # Describe key binding
bind-key -n M-~ show-messages                                       # Show messages
bind-key -n M-t clock-mode                                          # Show a clock
bind-key -n M-C customize-mode                                      # Customize options


is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
# Use Alt+arrow keys to switch panes with vim integration
bind-key -n C-Left if-shell "$is_vim" "send-keys M-Left" "select-pane -L"
bind-key -n C-Down if-shell "$is_vim" "send-keys M-Down" "select-pane -D"
bind-key -n C-Up if-shell "$is_vim" "send-keys M-Up" "select-pane -U"
bind-key -n C-Right if-shell "$is_vim" "send-keys M-Right" "select-pane -R"
bind-key -n M-Left if-shell "$is_vim" "send-keys M-Left" "select-pane -L"
bind-key -n M-Down if-shell "$is_vim" "send-keys M-Down" "select-pane -D"
bind-key -n M-Up if-shell "$is_vim" "send-keys M-Up" "select-pane -U"
bind-key -n M-Right if-shell "$is_vim" "send-keys M-Right" "select-pane -R"

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'wl-copy'
